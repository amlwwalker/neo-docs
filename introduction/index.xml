<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Neo FS Tutorials</title><link>https://amlwwalker.github.io/neo-docs/introduction/</link><description>Recent content in Introduction on Neo FS Tutorials</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 18 Jan 2022 17:41:13 +0000</lastBuildDate><atom:link href="https://amlwwalker.github.io/neo-docs/introduction/index.xml" rel="self" type="application/rss+xml"/><item><title>Libraries</title><link>https://amlwwalker.github.io/neo-docs/introduction/libraries/</link><pubDate>Tue, 18 Jan 2022 18:14:25 +0000</pubDate><guid>https://amlwwalker.github.io/neo-docs/introduction/libraries/</guid><description>Code Libraries The Go SDK is the basis of all the functionality that is available to you as a developer with regards to NeoFS. Due to the underlying protocol of NeoFS being gRPC, this can be ported to other languages (coming soon here) however for the time being, to get started it is best to use the Go SDK.
There are however certain &amp;lsquo;functionalities&amp;rsquo; that you will require from the Neo-Go library (such as wallet management and cryptography packages), which you can read more about here.</description></item><item><title>Concepts</title><link>https://amlwwalker.github.io/neo-docs/introduction/concepts/</link><pubDate>Tue, 18 Jan 2022 17:41:51 +0000</pubDate><guid>https://amlwwalker.github.io/neo-docs/introduction/concepts/</guid><description>NeoFS is very carefully designed to offer the power of a filesytem with all the expected capabilities, on top of a decentralised network.
This means that files/folders etc can have permissions to who can read/write to them who can delete etc etc.
As NeoFS is built on top of the Neo blockchain, these permissions are based on wallet addresses of users.
Objects Objects represent all files/data that is stored on NeoFS.</description></item></channel></rss>